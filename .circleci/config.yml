version: 2.1

orbs:
  node: circleci/node@2.0.3
  artifactory: circleci/artifactory@1.0.0
  aws-ecs: circleci/aws-ecs@2.0.0
  aws-cli: circleci/aws-cli@1.4.0
  browser-tools: circleci/browser-tools@1.1.0

executors:
  node:
    docker:
      - image: cimg/node:13.10.0

  browsers:
    docker:
      - image: cimg/node:14.15.5-browsers

jobs:
  build-test-node:
    executor: browsers
    steps:
     - browser-tools/install-browser-tools
     - checkout
     - node/install-packages
     - run:
        command: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
  build-scan:
    executor: node
    steps:
      - checkout
      - setup_remote_docker
      - artifactory/install
      - run:
          name: Configure JFrog CLI
          command: |
            jfrog rt c $ARTIFACTORY_SERVER --url=$ARTIFACTORY_URL --user=$ARTIFACTORY_USER --apikey=$ARTIFACTORY_API_KEY
      - run:
          name: Configure NPM
          command: |
            jfrog rt npmc --repo-resolve=npm --repo-deploy=npm --server-id-resolve=$ARTIFACTORY_SERVER --server-id-deploy=$ARTIFACTORY_SERVER
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "package-lock.json" }}
            - v1-deps-
      - run:
          name: NPM Install
          no_output_timeout: 30m
          command: |
            npm install
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: NPM Publish
          command: |
            jfrog rt npm-publish --build-name=demo-build --build-number=$CIRCLE_SHA1
      - run:
          name: Build Publish
          command: |
            jfrog rt build-publish demo-build $CIRCLE_SHA1
      - run:
          name: Build Docker image
          command: |
            docker build -t $ARTIFACTORY_SERVER/docker/demo-build:$CIRCLE_SHA1 .
      - run:
          name: Docker Push
          command: |
            jfrog rt dp $ARTIFACTORY_SERVER/docker/demo-build:$CIRCLE_SHA1 docker --build-name=demo-build --build-number=$CIRCLE_SHA1
      - run:
          name: Final build Publish with Env Vars
          command: |
            jfrog rt bce demo-build $CIRCLE_SHA1
            jfrog rt bp demo-build $CIRCLE_SHA1
      - run:
          name: Build Xray Scan
          command: |
            jfrog rt bs demo-build $CIRCLE_SHA1
  promote:
    executor: node
    steps:
      - checkout
      - artifactory/install
      - artifactory/configure:
          artifactory-key: ARTIFACTORY_API_KEY
          artifactory-url: ARTIFACTORY_URL
          artifactory-user: ARTIFACTORY_USER
      - run:
          name: Promote
          command: jfrog rt bpr demo-build $CIRCLE_SHA1 docker-local

workflows:
  build_test_deploy:
    jobs:
      - build-test-node
      - build-scan:
          requires:
           - build-test-node
      - hold:
          type: approval
          requires:
            - build-scan
          filters:
            branches:
              only: master
      - promote:
          requires:
            - hold
          filters:
            branches:
              only: master
      - aws-ecs/update-task-definition:
          family: 'jfrog-circleci-demo'
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          container-image-name-updates: 'container=demo-build,image-and-tag=circle.jfrog.io/docker/demo-build:${CIRCLE_SHA1}'
          requires:
            - promote



